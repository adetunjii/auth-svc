syntax = "proto3";
option go_package = "internal/proto";
package auth;

message LoginRequest {
   string login = 1;
   string password = 2;
}

message LoginResponse {
  string message = 1;
  string requestId = 2;
}

message RegisterRequest {
  string firstName = 1;
  string lastName = 2;
  string email = 3;
  string phoneNumber = 4;
  string phoneCountryCode = 5;
  string password = 6;
  string address = 7;
  string state = 8;
  string country = 9;
}

message RegisterResponse {
  string message = 1;
  string requestId = 2;
}

message InitPhoneVerificationRequest {
  string phoneNumber = 1;
  string phoneCountryCode = 2;
  string type = 3;
}

message InitEmailVerificationResponse {
  string message = 1;
  string requestId = 2;
  enum OtpType {
    LOGIN = 0;
    REG = 1;
  }
  OtpType type = 3;
}

message InitPhoneVerificationResponse {
  string message = 1;
}

message EmailVerificationRequest {
  string requestID = 1;
  string otp = 2;
  string email = 3; 
  enum OtpType {
    LOGIN = 0;
    REG = 1;
  }
  OtpType type = 4;
}

message VerifyLoginRequest {
  string email = 1;
  string requestId = 2;
  string otp = 3;
  enum OtpType {
    LOGIN = 0;
    REG = 1;
  }
  OtpType type = 4;
}

message VerifyLoginResponse {
  string token = 1;
}

message EmailVerificationResponse {
  string message = 1;
}

message LogoutRequest {
  string user_id = 1;
}

message LogoutResponse {
  string message = 1;
}

message Country {
  int32 id = 1;
  string name = 2;
  string iso = 3;
  string phoneCode = 4;
}

message GetAllCountryRequest{}

message GetAllCountryResponse {
  repeated Country countries = 1;
}


service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc InitPhoneVerification(InitPhoneVerificationRequest) returns (InitPhoneVerificationResponse) {}
  rpc VerifyEmail(EmailVerificationRequest) returns (EmailVerificationResponse) {}
  rpc VerifyLogin(VerifyLoginRequest) returns (VerifyLoginResponse) {}
  rpc Logout (LogoutRequest) returns (LogoutResponse){}
  rpc GetAllCountries(GetAllCountryRequest) returns (GetAllCountryResponse) {}
}